{"version":3,"sources":["api/goods.ts","Components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["API_URL","getAll","fetch","then","response","json","get5First","goods","sort","goodA","goodB","name","localeCompare","sortedGoods","slice","getRed","filter","good","color","GoodsList","map","style","id","App","state","loadGoods","getSpecificGoods","a","setState","this","type","onClick","goodsAPI","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oRACMA,EAAO,wEAEN,SAASC,IACd,OAAOC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,SAASC,IACd,OAAOJ,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAK,OAAIA,EAAMC,MAAK,SAACC,EAAaC,GAAd,OACxBD,EAAME,KAAKC,cAAcF,EAAMC,YAEhCR,MAAK,SAAAU,GAAW,OAAI,YAAIA,GAAaC,MAAM,EAAG,MAG5C,SAASC,IACd,OAAOb,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAK,OAAIA,EAAMS,QAAO,SAACC,GAAD,MAA+B,QAAfA,EAAKC,Y,WCdxCC,EAA6B,SAAC,GAAD,IAAGZ,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMa,KAAI,SAAAH,GAAI,OACb,oBAAkBI,MAAO,CAAEH,MAAOD,EAAKC,OAAvC,SACGD,EAAKN,MADCM,EAAKK,UCAdC,E,4MACJC,MAAQ,CACNjB,MAAO,I,EAGTkB,U,uCAAY,WAAOC,GAAP,eAAAC,EAAA,sEACUD,IADV,OACJnB,EADI,OAGV,EAAKqB,SAAS,CAAErB,UAHN,2C,kGAMZ,WAAU,IAAD,OACCA,EAAUsB,KAAKL,MAAfjB,MAER,OACE,gCACE,wBACEuB,KAAK,SACLC,QAAS,WACP,EAAKN,UAAUO,IAHnB,4BAQA,wBACEF,KAAK,SACLC,QAAS,WACP,EAAKN,UAAUO,IAHnB,gCAQA,wBACEF,KAAK,SACLC,QAAS,WACP,EAAKN,UAAUO,IAHnB,4BAQA,uBACkB,IAAjBzB,EAAM0B,OAAe,WAAc,cAAC,EAAD,CAAW1B,MAAOA,W,GAzC5C2B,IAAMC,WA+CTZ,ICrDfa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a0b35dfc.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport function get5First(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(goods => goods.sort((goodA: Good, goodB: Good) => (\n      goodA.name.localeCompare(goodB.name)\n    )))\n    .then(sortedGoods => [...sortedGoods].slice(0, 5));\n}\n\nexport function getRed(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(goods => goods.filter((good: Good) => good.color === 'red'));\n}\n","import React from 'react';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.scss';\nimport * as goodsAPI from './api/goods';\nimport { GoodsList } from './Components/GoodsList';\n\ntype State = {\n  goods: Good[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n  };\n\n  loadGoods = async (getSpecificGoods: () => Promise<Good[]>) => {\n    const goods = await getSpecificGoods();\n\n    this.setState({ goods });\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.loadGoods(goodsAPI.getAll);\n          }}\n        >\n          Load All goods\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.loadGoods(goodsAPI.get5First);\n          }}\n        >\n          Load 5 first goods\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.loadGoods(goodsAPI.getRed);\n          }}\n        >\n          Load red goods\n        </button>\n        <br />\n        {goods.length === 0 ? 'No goods' : (<GoodsList goods={goods} />)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}